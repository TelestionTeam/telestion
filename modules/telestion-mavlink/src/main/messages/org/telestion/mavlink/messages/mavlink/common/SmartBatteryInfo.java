package org.telestion.mavlink.messages.mavlink.common;

import org.telestion.adapter.mavlink.annotation.MavField;
import org.telestion.adapter.mavlink.annotation.MavInfo;
import org.telestion.adapter.mavlink.annotation.NativeType;
import org.telestion.adapter.mavlink.annotation.MavArray;
import org.telestion.adapter.mavlink.message.MavlinkMessage;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Smart Battery information (static/infrequent update). Use for updates from: smart battery to flight stack, flight stack to GCS. Use instead of BATTERY_STATUS for smart batteries.</br>
 * </br>
 * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
 * 
 * @author Autogenerated by XML2Record-Tool (by Cedric Boes)
 * @version 1.0 (autogenerated)
 * @deprecated This is still WIP and might change!
 */
@Deprecated
@MavInfo(id = 370, crc = 98)
@SuppressWarnings("preview")
public record SmartBatteryInfo(
        /**
         * Battery ID</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.UINT_8)
        @JsonProperty int id, 
        /**
         * Capacity when full according to manufacturer, -1: field not provided.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.INT_32)
        @JsonProperty int capacityFullSpecification, 
        /**
         * Capacity when full (accounting for battery degradation), -1: field not provided.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.INT_32)
        @JsonProperty int capacityFull, 
        /**
         * Charge/discharge cycle count. -1: field not provided.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.UINT_16)
        @JsonProperty int cycleCount, 
        /**
         * Serial number. -1: field not provided.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.INT_32)
        @JsonProperty int serialNumber, 
        /**
         * Static device name. Encode as manufacturer and product names separated using an underscore.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavArray(length = 50)
        @MavField(nativeType = NativeType.CHAR)
        @JsonProperty int[] deviceName, 
        /**
         * Battery weight. 0: field not provided.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.UINT_16)
        @JsonProperty int weight, 
        /**
         * Minimum per-cell voltage when discharging. If not supplied set to UINT16_MAX value.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.UINT_16)
        @JsonProperty int dischargeMinimumVoltage, 
        /**
         * Minimum per-cell voltage when charging. If not supplied set to UINT16_MAX value.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.UINT_16)
        @JsonProperty int chargingMinimumVoltage, 
        /**
         * Minimum per-cell voltage when resting. If not supplied set to UINT16_MAX value.</br>
         * </br>
         * <i>Autogenerated by XML2Record-Tool v1.3.7</i>
         */
        @MavField(nativeType = NativeType.UINT_16)
        @JsonProperty int restingMinimumVoltage) implements MavlinkMessage {
    /**
     * There shall be no default-constructor for normal developers.
     */
    @SuppressWarnings("unused")
    private SmartBatteryInfo() {
        this(0, 0, 0, 0, 0, null, 0, 0, 0, 0);
    }
}